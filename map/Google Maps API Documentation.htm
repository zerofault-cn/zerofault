<html>
<head>
<META HTTP-EQUIV="content-type" CONTENT="text/html; charset=GB2312">
<link rel="stylesheet" href="/apis/maps/mapsapi.css" type="text/css"/>
<style>
body,td,div,p,a,font,span{font-family:arial,sans-serif;}
code{font-size:90%; font-family:"Courier New", Courier, mono}
.s { line-height: 155%; }
  table {
      border-collapse: separate;
    }
    pre {
      color: #008000;
	  font-size:90%;
      font-family: Courier New, Courier;
      background-color: #eeeeee;
      border: 1px solid silver;
      padding: 3px;
      overflow: auto;
    }

    #contents {
      margin-left: 6%;
      margin-right: 6%;
    }

    h2 {
      margin-left: -6%;
    }
    h3 {
      margin-left: -4.5%;
    }
    h4 {
      margin-left: -3.5%;
    }

    #toc {
      margin-left: -6%;
    } 
</style>
<title>Google Maps API Documentation</title>
</head>
<body class=search bgcolor=ffffff text=000000 link=0000CC vlink=800080 alink=ff0000 topmargin=5>
<!-------------------main content-------------------->
      <font size=-1>
      <p style="margin-top: 0pt;">Google Maps API可以让你在自己的网页之中嵌入Google地图. 在此之前，你只需要 <a href="http://www.google.com/apis/maps/signup.html" target="_blank">申请一个API授权码</a>,而这是免费的.</p>
      <p>因为Google Maps API是还在测试之中的程序，可能有些Bug，并且功能上也有一些欠缺. 你可以到<a href="http://groups-beta.google.com/group/Google-Maps-API" target="_blank">Google Maps API讨论组</a>给出你的意见.</p>
      <div id="contents">
        <h2><a name="_Contents">Google Maps API 说明</a></h2>
        <p> </p>
        <ul id="toc">
          <li> <a href="#Introduction">导言</a>
            <ul>
              <li> <a href="#The_Hello_World_of_Google_Maps">Google Maps的"Hello World"</a> </li>
              <li> <a href="#Browser_Compatibility">浏览器兼容性</a> </li>
              <li> <a href="#XHTML_and_VML">XHTML和VML</a> </li>
              <li> <a href="#API_Updates">API更新</a> </li>
              <li> <a href="#Geocoding_Routing_Etc">地理、行程和其他</a> </li>
            </ul>
          </li>
          <li> <a href="#Examples">应用范例</a>
            <ul>
              <li> <a href="#The_Basics">一个简单例子</a> </li>
              <li> <a href="#Map_Movement_and_Animation">地图的移动和变换</a> </li>
              <li> <a href="#Adding_Controls_to_the_Map">在地图上添加控件</a> </li>
              <li> <a href="#Event_Listeners">事件监视</a> </li>
              <li> <a href="#Opening_an_Info_Window">显示信息浮窗</a> </li>
              <li> <a href="#Map_Overlays">地图标注</a> </li>
              <li> <a href="#Click_Handling">响应用户点击</a> </li>
              <li> <a href="#Display_Info_Windows_Above_Marke">在标记上显示信息浮窗</a> </li>
              <li> <a href="#Creating_Icons">创建图标</a> </li>
              <li> <a href="#Using_Icon_Classes">使用图标类</a> </li>
              <li> <a href="#Using_XML_and_Asynchronous_RPC_A">在地图上使用XML和异步RPC ("AJAX")</a> </li>
            </ul>
          </li>
          <li> <a href="#API_Overview">API 概要</a>
            <ul>
              <li> <a href="#The_GMap_class"><code>GMap</code>类</a> </li>
              <li> <a href="#Events_overview">事件</a> </li>
              <li> <a href="#The_Info_Window">信息浮窗</a> </li>
              <li> <a href="#Overlays_overview">标注</a>
                <ul>
                  <li> <a href="#Icons_and_Markers">图标和标记</a> </li>
                  <li> <a href="#Polylines">折线</a> </li>
                </ul>
              </li>
              <li> <a href="#Controls_overview">控件</a> </li>
              <li> <a href="#XML_and_RPC">XML和RPC</a> </li>
            </ul>
          </li>
          <li> <a href="#Class_Reference">类参考</a>
            <ul>
              <li> <a href="#GMap_code_"><code>GMap</code></a>
                <ul>
                  <li> <a href="#Constructor_GMap">构造函数</a> </li>
                  <li> <a href="#Methods_GMap">方法</a>
                    <ul>
                      <li> <a href="#Configuration">配置</a> </li>
                      <li> <a href="#Controls_GMap">控件处理</a> </li>
                      <li> <a href="#State">状态</a> </li>
                      <li> <a href="#Overlays_GMap">标注</a> </li>
                      <li> <a href="#Info_Window">信息浮窗</a> </li>
                      <li> <a href="#Events_GMap">事件</a> </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li> <a href="#GMarker_code_"><code>GMarker</code></a>
                <ul>
                  <li> <a href="#Constructor_GMarker">构造函数</a> </li>
                  <li> <a href="#Methods_GMarker">方法</a> </li>
                  <li> <a href="#Events_GMarker"事件</a> </li>
                </ul>
              </li>
              <li> <a href="#GPolyline_code_"><code>GPolyline</code></a>
                <ul>
                  <li> <a href="#Constructor_GPolyline">构造函数</a> </li>
                </ul>
              </li>
              <li> <a href="#GIcon_code_"><code>GIcon</code></a>
                <ul>
                  <li> <a href="#Constructor_GIcon">构造函数</a> </li>
                  <li> <a href="#Properties_GIcon">属性</a> </li>
                </ul>
              </li>
              <li> <a href="#GEvent_code_"><code>GEvent</code></a>
                <ul>
                  <li> <a href="#Static_Methods_GEvent">静态方法</a> </li>
                </ul>
              </li>
              <li> <a href="#GXmlHttp_code_"><code>GXmlHttp</code></a>
                <ul>
                  <li> <a href="#Static_Methods_GXmlHttp">静态方法</a> </li>
                </ul>
              </li>
              <li> <a href="#GXml_code_"><code>GXml</code></a>
                <ul>
                  <li> <a href="#Static_Methods_GXml">静态方法</a> </li>
                </ul>
              </li>
              <li> <a href="#GXslt_code_"><code>GXslt</code></a>
                <ul>
                  <li> <a href="#Static_Methods_GXslt">静态方法</a> </li>
                  <li> <a href="#Methods_GXslt">方法</a> </li>
                </ul>
              </li>
              <li> <a href="#GPoint_code_"><code>GPoint</code></a>
                <ul>
                  <li> <a href="#Constructor_GPoint">构造函数</a> </li>
                  <li> <a href="#Properties_GPoint">属性</a> </li>
                </ul>
              </li>
              <li> <a href="#GSize_code_"><code>GSize</code></a>
                <ul>
                  <li> <a href="#Constructor_GSize">构造函数</a> </li>
                  <li> <a href="#Properties_GSize">属性</a> </li>
                </ul>
              </li>
              <li> <a href="#GBounds_code_"><code>GBounds</code></a>
                <ul>
                  <li> <a href="#Constructor_GBounds">构造函数</a> </li>
                  <li> <a href="#Properties_GBounds">属性</a> </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
        <p><b>本文来源于<a href="http://www.google.com" target="_blank">Google</a>由<a href="http://www.step1.cn" target="_blank">Step1.cn</a>翻译并整理，若有任何疑问，可到<a href="http://www.step1.cn/archive/2005/09/30/190.aspx#Post" target="_blank">评论区</a>留言</b></p>
        <p> </p>
        <h2><a name="Introduction"> 导言 </a></h2>
        <p> </p>
        <h3><a name="The_Hello_World_of_Google_Maps"> Google Maps的"Hello World" </a></h3>
        <p>看简单的例子是开始学习API的最有效的方法，这个网页在层上居中显示了一个300x300的地图: </p>
        <p> </p>
        <pre>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
  &lt;head&gt;
    &lt;title&gt;Google Maps JavaScript API Example - simple&lt;/title&gt;
    &lt;script src="http://maps.google.com/maps?file=api&amp;v=1&amp;key=abcdefg" type="text/javascript"&gt;&lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id="map" style="width: 300px; height: 300px"&gt;&lt;/div&gt;
    &lt;script type="text/javascript"&gt;
    //&lt;![CDATA[

    if (GBrowserIsCompatible()) {
      var map = new GMap(document.getElementById("map"));
      map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);
    }

    //]]&gt;
    &lt;/script&gt;
  &lt;/body&gt;

&lt;/html&gt;
</pre>
        <p> 你可以<a href="simple.html" target="_blank">点这儿</a>预览这个例子的效果，不过在你上传到自己的网站上运行之前，你必须把其中的"&key="之后的授权码换成自己在<a href="http://www.google.com/apis/maps/signup.html" target="_blank">Maps
            API key</a>申请的授权码，否则看不到效果.本网站使用的范例中的授权码只能在<a href="http://www.step1.cn" target="_blank">Step1.cn</a>域名上使用。</p>
        <p>你可以看到，Google Maps使用了一个JavaScript文件(<code>http://maps.google.com/maps?file=api&amp;v=1</code>)
          这个文件包含了你在自己的网页上显示Google地图的所有的函数和类.
          想要在自己的网页上使用Google Maps API，你必须在网页上通过<code>script</code>标签连接一个包含你申请的授权码的URL: </p>
        <p> </p>
        <pre>&lt;script src="http://maps.google.com/maps?file=api&amp;v=1&amp;key=abcdefg" type="text/javascript"&gt;&lt;/script&gt;
</pre>
        <p>Google Maps API提供的最重要的类是<code>GMap</code>,它代表页面上的地图对象，
          你可以根据需要在页面上使用多个<code>GMap</code>的实例
	  每个地图被包含在一个HTML的容器(container)里面，比如DIV标签. </p>
        <p>下面会讲到如何给地图实例添加和操作标注.</p>
        <p> </p>
        <p> </p>
        <h3><a name="Browser_Compatibility">浏览器兼容性</a></h3>
        <p> Google Maps并不是对每一个浏览器都兼容的， Google Maps
          现在兼容Firefox/Mozilla, IE 5.5+, Safari
          1.2+和Opera，不支持IE 5.0.因为每个不兼容的浏览器的动作又是不同的，
          所以Maps API提供了一个全局的方法(<code>GBrowserIsCompatible()</code>)来检查浏览器兼容性，
	  但是并不自动检查.
	  引入的脚本<code>http://maps.google.com/maps?file=api&amp;v=1</code>可以在几乎所有的浏览器中被正常解析，
	  所以你可以放心的在检查浏览器兼容性之前引入该脚本.</p>
        <p>在本文的所有例子之中，除了上面的一篇之外，其他的既没有用<code>GBrowserIsCompatible()</code>检查浏览器兼容性，也没有给出任何错误信息
	  正式使用的程序上应该有更加友好的处理方法，这里为了让这些例子更加易懂，而忽略了浏览器检查.</p>
        <p> </p>
        <h3><a name="XHTML_and_VML"> </a>XHTML和VML</h3>
        <p>建议你在需要使用地图的网页上使用标准的兼容性好的XHTML,当页面顶端存在<code>DOCTYPE</code>标签时，浏览器会使用"标准兼容模式"来处理页面， 
	  这将使页面能更好的跨越浏览器执行. </p>
        <p>同样，如果你需要在地图上包含折线，你需要为IE浏览器在页面上引入VML命名空间
	  这样，你的文档开头就应该是这样的：</p>
        <p> </p>
        <pre>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml"&gt;
  &lt;head&gt;
    &lt;style type="text/css"&gt;
    v\:* {
      behavior:url(#default#VML);
    }
    &lt;/style&gt;
    &lt;script src="http://maps.google.com/maps?file=api&amp;v=1&amp;key=abcdefg" type="text/javascript"&gt;&lt;/script&gt;
  &lt;/head&gt;
</pre>
        <p> 关于VML，你可以在<a href="http://msdn.microsoft.com/workshop/author/VML/ref/appendix.asp" target="_blank">Microsoft's
            VML workshop</a>查找更多信息.</p>
        <p> </p>
        <p> </p>
        <h3><a name="API_Updates"> </a>API更新</h3>
        <p>引入的JavaScript文件URL<code>http://maps.google.com/maps?file=api&amp;v=1</code>指向到 API 的"版本1"，
	  如果API出现了重要的升级，会增加这个版本号并且在<a href="http://code.google.com/" target="_blank">Google Code</a>和<a href="http://groups-beta.google.com/group/Google-Maps-API" target="_blank">Maps API讨论组</a>上面发布公告.</p>
        <p>Google会同时运行新版和旧版一个月左右，随后旧版就会被关闭.</p>
        <p>地图工作小组会在修复BUG或改善性能之后随时更新API，这些更新仅仅是为了改善性能和修复错误，不过在这个工程之中也可能发生影响API连接的情况
	  如果这样的事情发生，你可以到<a href="http://groups-beta.google.com/group/Google-Maps-API" target="_blank">Maps API discussion group</a>报告你遇到的情况</p>
        <p> </p>
        <p> </p>
        <h3><a name="Geocoding_Routing_Etc"> </a>地理、行程和其他</h3>
        <p>Google Maps API现在并不包含<a href="http://en.wikipedia.org/wiki/Geocoding" target="_blank">地理</a>和
        行程服务,可在网上有许多关于<a href="http://www.google.com/search?q=free+geocoder" target="_blank">free
          geocoders</a>的相关内容.</p>
        <p> </p>
        <p> </p>
        <p> </p>
        <h2><a name="Examples">应用范例</a></h2>
        <p> </p>
        <h3><a name="The_Basics">一个简单例子</a></h3>
        <p>创建一个在所在层中居中的地图</p>
        <p> </p>
        <pre>var map = new GMap(document.getElementById("map"));
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);
</pre>
        <a href="simple.html" target="_blank">查看范例(simple.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Map_Movement_and_Animation">地图的移动和变换</a></h3>
        <p><code>recenterOrPanToLatLng</code> 方法进行一个地图变换，目标点经/纬在当前视口之中时执行一个连续的动作，否则，执行不连续的变换动作</p>
        <p> </p>
        <pre>var map = new GMap(document.getElementById("map"));
map.centerAndZoom(new GPoint(-122.1419, 37.4419), 4);
window.setTimeout(function() {
  map.recenterOrPanToLatLng(new GPoint(-122.1569, 37.4569));
}, 2000);
</pre>
        <a href="animate.html" target="_blank">查看范例(animate.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Adding_Controls_to_the_Map">在地图上添加控件</a></h3>
        <p> <code>addControl</code>方法可以在地图上添加控件，并且集成了<code>GSmallMapControl</code>(用来缩放和移动图片)和<code>GMapTypeControl</code>(用来在地图和卫星图模式间切换)两个控件.</p>
        <p> </p>
        <pre>var map = new GMap(document.getElementById("map"));
map.addControl(new GSmallMapControl());
map.addControl(new GMapTypeControl());
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);
</pre>
        <a href="controls.html" target="_blank">查看范例(controls.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Event_Listeners">事件监视</a></h3>
        <p><code>GEvent.addListener</code>用来注册事件监视器，在这个例子中，在用户移动或拖拽地图后，输出地图中心点的经/纬.</p>
        <p> </p>
        <pre>var map = new GMap(document.getElementById("map"));
GEvent.addListener(map, "moveend", function() {
  var center = map.getCenterLatLng();
  var latLngStr = '(' + center.y + ', ' + center.x + ')';
  document.getElementById("message").innerHTML = latLngStr;
});
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);
</pre>
        <a href="event.html" target="_blank">查看范例(event.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Opening_an_Info_Window">显示信息浮窗</a></h3>
        <p>这个范例显示一个指向地图中心点的"Hello world"信息浮窗，这里信息浮窗显示在指向点的上面，而实际上，信息窗能在地图的任何地方显示.</p>
        <p> </p>
        <pre>var map = new GMap(document.getElementById("map"));
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);
map.openInfoWindow(map.getCenterLatLng(),
                   document.createTextNode("Hello world"));
</pre>
        <a href="infowindow.html" target="_blank">查看范例(infowindow.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Map_Overlays">地图标注</a></h3>
        <p>本范例通过创建10个随机的标注和折线来说明地图标注的用法.</p>
        <p> </p>
        <pre>// Center the map on Palo Alto
var map = new GMap(document.getElementById("map"));
map.addControl(new GSmallMapControl());
map.addControl(new GMapTypeControl());
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);

// Add 10 random markers in the map viewport using the default icon
var bounds = map.getBoundsLatLng();
var width = bounds.maxX - bounds.minX;
var height = bounds.maxY - bounds.minY;
for (var i = 0; i &lt; 10; i++) {
  var point = new GPoint(bounds.minX + width * Math.random(),
                        bounds.minY + height * Math.random());
  var marker = new GMarker(point);
  map.addOverlay(marker);
}

// Add a polyline with 4 random points. Sort the points by longitude so that
// the line does not intersect itself.
var points = [];
for (var i = 0; i &lt; 5; i++) {
  points.push(new GPoint(bounds.minX + width * Math.random(),
                        bounds.minY + height * Math.random()));
}
points.sort(function(p1, p2) { return p1.x - p2.x; });
map.addOverlay(new GPolyline(points));
</pre>
        <a href="overlay.html" target="_blank">查看范例(overlay.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Click_Handling">响应用户点击</a></h3>
        <p>本范例在用户点击地图时，在相应的点创建一个标记，用户点击标记时，移除这个标记. </p>
        <p> </p>
        <pre>var map = new GMap(document.getElementById("map"));
map.addControl(new GSmallMapControl());
map.addControl(new GMapTypeControl());
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);

GEvent.addListener(map, 'click', function(overlay, point) {
  if (overlay) {
    map.removeOverlay(overlay);
  } else if (point) {
    map.addOverlay(new GMarker(point));
  }
});
</pre>
        <a href="click.html" target="_blank">查看范例(click.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Display_Info_Windows_Above_Marke">在标记上显示信息浮窗</a></h3>
        <p>在这个例子中，点击每一个标记，就会在标记上面显示一个自定义的信息浮窗.</p>
        <p> </p>
        <pre>// Center the map on Palo Alto
var map = new GMap(document.getElementById("map"));
map.addControl(new GSmallMapControl());
map.addControl(new GMapTypeControl());
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);

// Creates a marker whose info window displays the given number
function createMarker(point, number) {
  var marker = new GMarker(point);

  // Show this marker's index in the info window when it is clicked
  var html = "Marker #&lt;b&gt;" + number + "&lt;/b&gt;";
  GEvent.addListener(marker, "click", function() {
    marker.openInfoWindowHtml(html);
  });

  return marker;
}

// Add 10 random markers in the map viewport
var bounds = map.getBoundsLatLng();
var width = bounds.maxX - bounds.minX;
var height = bounds.maxY - bounds.minY;
for (var i = 0; i &lt; 10; i++) {
  var point = new GPoint(bounds.minX + width * Math.random(),
                        bounds.minY + height * Math.random());
  var marker = createMarker(point, i + 1);
  map.addOverlay(marker);
}
</pre>
        <a href="markerinfowindow.html" target="_blank">查看范例(markerinfowindow.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Creating_Icons">创建图标</a></h3>
        <p>创建一种新图标,就像在<a href="http://labs.google.com/ridefinder" target="_blank">Google
            Ride Finder</a>上面使用的迷你标记一样.必须给图标指定前景图片、阴影图片、图标在地图上的点和信息浮窗在图标上的点.</p>
        <p> </p>
        <pre>// Create our "tiny" marker icon
var icon = new GIcon();
icon.image = "http://labs.google.com/ridefinder/images/mm_20_red.png";
icon.shadow = "http://labs.google.com/ridefinder/images/mm_20_shadow.png";
icon.iconSize = new GSize(12, 20);
icon.shadowSize = new GSize(22, 20);
icon.iconAnchor = new GPoint(6, 20);
icon.infoWindowAnchor = new GPoint(5, 1);

// Center the map on Palo Alto
var map = new GMap(document.getElementById("map"));
map.addControl(new GSmallMapControl());
map.addControl(new GMapTypeControl());
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);

// Creates one of our tiny markers at the given point
function createMarker(point) {
  var marker = new GMarker(point, icon);
  map.addOverlay(marker);
  GEvent.addListener(marker, "click", function() {
    marker.openInfoWindowHtml("You clicked me!");
  });
}

// Place the icons randomly in the map viewport
var bounds = map.getBoundsLatLng();
var width = bounds.maxX - bounds.minX;
var height = bounds.maxY - bounds.minY;
for (var i = 0; i &lt; 10; i++) {
  createMarker(new GPoint(bounds.minX + width * Math.random(),
                          bounds.minY + height * Math.random()));
}
</pre>
        <a href="icon.html" target="_blank">查看范例(icon.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Using_Icon_Classes">使用图标类</a></h3>
        <p>多数情况下，使用的图标可能前景图片不同，可是形状和阴影是一样的，达到这种效果最简单的方法是使用<code>GIcon</code>类的copy方法来构造.这样可以将一个Icon对象的所有属性复制到一个新的Icon对象中.</p>
        <p> </p>
        <pre>// Create a base icon for all of our markers that specifies the shadow, icon
// dimensions, etc.
var baseIcon = new GIcon();
baseIcon.shadow = "http://www.google.com/mapfiles/shadow50.png";
baseIcon.iconSize = new GSize(20, 34);
baseIcon.shadowSize = new GSize(37, 34);
baseIcon.iconAnchor = new GPoint(9, 34);
baseIcon.infoWindowAnchor = new GPoint(9, 2);
baseIcon.infoShadowAnchor = new GPoint(18, 25);

// Center the map on Palo Alto
var map = new GMap(document.getElementById("map"));
map.addControl(new GSmallMapControl());
map.addControl(new GMapTypeControl());
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);

// Creates a marker whose info window displays the letter corresponding to
// the given index
function createMarker(point, index) {
  // Create a lettered icon for this point using our icon class from above
  var letter = String.fromCharCode("A".charCodeAt(0) + index);
  var icon = new GIcon(baseIcon);
  icon.image = "http://www.google.com/mapfiles/marker" + letter + ".png";
  var marker = new GMarker(point, icon);

  // Show this marker's index in the info window when it is clicked
  var html = "Marker &lt;b&gt;" + letter + "&lt;/b&gt;";
  GEvent.addListener(marker, "click", function() {
    marker.openInfoWindowHtml(html);
  });

  return marker;
}

// Add 10 random markers in the map viewport
var bounds = map.getBoundsLatLng();
var width = bounds.maxX - bounds.minX;
var height = bounds.maxY - bounds.minY;
for (var i = 0; i &lt; 10; i++) {
  var point = new GPoint(bounds.minX + width * Math.random(),
                         bounds.minY + height * Math.random());
  var marker = createMarker(point, i);
  map.addOverlay(marker);
}
</pre>
        <a href="iconclass.html" target="_blank">查看范例(iconclass.html)</a>
        <p> </p>
        <p> </p>
        <h3><a name="Using_XML_and_Asynchronous_RPC_A"> </a>在地图上使用XML和异步RPC ("AJAX")</h3>
        <p>在这个范例中，我们下载一个静态文件("data.xml")，这个XML文件中包含一系列经/纬坐标，当下载完成后，读取这个XML文件并为每一个坐标在地图上创建一个标记.</p>
        <p> </p>
        <pre>// Center the map on Palo Alto
var map = new GMap(document.getElementById("map"));
map.addControl(new GSmallMapControl());
map.addControl(new GMapTypeControl());
map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);

// Download the data in data.xml and load it on the map. The format we
// expect is:
// &lt;markers&gt;
//   &lt;marker lat="37.441" lng="-122.141"/&gt;
//   &lt;marker lat="37.322" lng="-121.213"/&gt;
// &lt;/markers&gt;
var request = GXmlHttp.create();
request.open("GET", "data.xml", true);
request.onreadystatechange = function() {
  if (request.readyState == 4) {
    var xmlDoc = request.responseXML;
    var markers = xmlDoc.documentElement.getElementsByTagName("marker");
    for (var i = 0; i &lt; markers.length; i++) {
      var point = new GPoint(parseFloat(markers[i].getAttribute("lng")),
                             parseFloat(markers[i].getAttribute("lat")));
      var marker = new GMarker(point);
      map.addOverlay(marker);
    }
  }
}
request.send(null);
</pre>
        <a href="async.html" target="_blank">查看范例(async.html)</a>
        <p> </p>
        <p> </p>
        <h2><a name="API_Overview"> </a>API 概要</h2>
        <p> </p>
        <h3><a name="The_GMap_class"><code>GMap</code>类</a></h3>
        <p><code>GMap</code>的每一个实例表现为页面上的一个地图，可以创建这个类的多个实例
	  每个地图被包含在一个container之中，比如一个DIV标签，除非明确指定，地图将使用相应container的大小.</p>
        <p><code>GMap</code>类提供了操作地图点(中心和缩放度)和添加删除标记(比如<code>GMarker</code>和<code>GPolyline</code>实例)和方法.
          同时也提供了一个打开"信息浮窗"的方法，地图上同时只能有一个信息浮窗.</p>
        <p>更多信息请参看<a href="#MapClass"><code>GMap</code>类参考</a></p>
        <p> </p>
        <p> </p>
        <h3><a name="Events_overview">事件</a></h3>
        <p>利用事件监视器，你可以在程序中加入动态的内容，每个实例提供一些指定的事件，你的程序可以利用静态方法<code>GEvent.addListener</code>或<code>GEvent.bind</code>监视这些事件.
        例如，以下代码片断在每次用户点击地图的时候显示一个警告: </p>
        <p> </p>
        <pre>var map = new GMap(document.getElementById("map"));
GEvent.addListener(map, "click", function() {
  alert("You clicked the map");
});
</pre>
        <p> <code>GEvent.addListener</code>使用一个函数作为第三个参数，这个函数作为事件处理器，在事件被触发时运行.
	  如果想绑定一个对象的方法到事件，可以使用<code>GEvent.bind</code>.例如： </p>
        <p> </p>
        <pre>function MyApplication() {
  this.counter = 0;
  this.map = new GMap(document.getElementById("map"));
  GEvent.bind(this.map, "click", this, this.onMapClick);
}

MyApplication.prototype.onMapClick() {
  this.counter++;
  alert("You have clicked the map " + this.counter +
            this.counter == 1 ?" time.":" times.");
}

var application = new MyApplication();
</pre>
        <p> </p>
        <p> </p>
        <h3><a name="The_Info_Window">信息浮窗</a></h3>
        <p>Map类有一个信息浮窗，可以在地图上以浮动窗口模式在地图上显示HTML内容.</p>
        <p>基本的浮动窗口方法是<code>openInfoWindow</code>，这个方法以一个点和一个HTML节点作为参数，这个HTML节点被添加到信息浮窗容器里面，并显示在相应点处.</p>
        <p> <code>openInfoWindowHtml</code>差不多，但是它使用HTML字符串作为参数.
	    <code>openInfoWindowXslt</code>则利用XML节点和XSLT文档的URL地址来生成信息浮窗内容，如果该XSLT文档还没有被下载，则会自动异步下载此文件.</p>
        <p>如果需要在标记上显示信息浮窗，你可以传递第三个参数(可选)给出窗口顶端和给定点位置的像素差.
	  比如你的标记高度是10px,你可以使用<code>GSize(0,-10)</code>作第三个参数.</p>
        <p> <code>GMarker</code>类还提供了<code>openInfoWindow</code>方法用来处理像素值内容，所以不用担心在程序中计算像素的问题.</p>
        <p> </p>
        <p> </p>
        <h3><a name="Overlays_overview">标注</a></h3>
        <p>标注是一些绑定到地理坐标的对象，当移动、缩放地图或切换模式(比如从地图到卫星图)时，标注也会跟着变化.</p>
        <p>Maps API提供两种标注:标记(地图上的图标)和折线(根据地理位置绘制的折线)</p>
        <p> </p>
        <h4><a name="Icons_and_Markers">图标和标记</a></h4>
        <p> The <code>GMarker</code>构造函数使用一个图标和一个点作为参数，并提供一些类似"点击"的事件，看这个<a href="overlay.html" target="_blank">创建标记的例子</a></p>
        <p>创建标记最困难的地方是指定图标，复杂在于一个图标需要几个不同的图片构成.</p>
        <p>每一个图标至少都有一个前景图片和一个阴影图片，阴影必须是前景图的45度视角的形状，并且左下角和前景图的左下角重叠，还必须是24-bit PNG灰度图片，才能刚好使图标看起来像站在地图上一样.</p>
        <p> </p>
        <p> The <code>GIcon</code>需要指定图标使用的图片文件的大小以便以合适的大小显示这些图片，一下是指定一个图标的最基本的代码：</p>
        <p> </p>
        <pre>var icon = new GIcon();
icon.image = "http://www.google.com/mapfiles/marker.png";
icon.shadow = "http://www.google.com/mapfiles/shadow50.png";
icon.iconSize = new GSize(20, 34);
icon.shadowSize = new GSize(37, 34);
</pre>
        <p> The <code>GIcon</code>类提供有超过7个的属性必须设置以保证图标在浏览器上的兼容性和功能. 
	  比如imageMap属性指定图标不透明部分的形状，如果你没有设置这个属性，在Firefox/Mozilla浏览器上，整个图标(包括透明部分)都能被点击.
	  看这个<a href="#IconClass">GIcon类参考</a>了解更多信息</p>
        <p> </p>
        <p> </p>
        <h4><a name="Polylines">折线</a></h4>
        <p><code>GPolyline</code>构造函数使用一组地理点最为参数，你也能指定颜色、线宽和透明度
	  颜色采用老的HTML样式，比如"#ff0000".
	  <code>GPolyline</code>不支持直接使用颜色名字.
	  例如以下代码会创建一个10像素宽的红色线段：</p>
        <p> </p>
        <pre>var polyline = new GPolyline([new GPoint(-122.1419, 37.4419),
                              new GPoint(-122.1519, 37.4519)],
                              "#ff0000", 10);
map.addOverlay(polyline);
</pre>
        <p>在IE浏览器中，我们用VML来绘制折线，而在其他的浏览器之中，我们使用Google服务器上的图片，并在地图变化时重新刷新图片.</p>
        <p> </p>
        <p> </p>
        <h3><a name="Controls_overview">控件</a></h3>
        <p><code>addControl</code>用来添加控件，Maps API可以让你在地图上使用如下控件：</p>
        <p> </p>
        <ul>
          <li> <code>GLargeMapControl</code>在Google Map中使用的大缩放/定位控件</li>
          <li> <code>GSmallMapControl</code>在Google Map中使用的小缩放/定位控件</li>
          <li> <code>GSmallZoomControl</code>一个小的缩放控件(不能定位)，用在小窗口中显示驾驶方向</li>
          <li> <code>GMapTypeControl</code>地图类型切换控件(如：地图和卫星图) </li>
        </ul>
        <p>例如，要在地图上添加一个缩放/定位控件，你可以在地图初始化时使用如下代码：</p>
        <p> </p>
        <pre>map.addControl(new GLargeMapControl());
</pre>
        <p>这样，控件就会被添加到地图的左上角</p>
        <p> </p>
        <p> </p>
        <h3><a name="XML_and_RPC"> </a>XML和RPC</h3>
        <p>Google Maps API提供了一个创建<code>XmlHttpRequest</code>对象的方法，当前可以在IE, Firefox, and Safari上运行正常，如下：</p>
        <p> </p>
        <pre>var request = GXmlHttp.create();
request.open('GET', "myfile.txt", true);
request.onreadystatechange = function() {
  if (request.readyState == 4) {
    alert(request.responseText);
  }
}
request.send(null);
</pre>
        <p>你还可以使用静态方法<code>GXml.parse</code>来解析一个XML文档，使用XML字符串作为参数，这个方法对所有的浏览器兼容.
	   如果本地浏览器不支持XML解析，则会采用一个基于JavaScript的解析器，可是不能保证这个解析器一定能正常的解析.</p>
        <p>注意Google Maps API不需要使用XML或<code>XmlHttpRequest</code>因为这是一个纯JavaScript/DHTML的API. </p>
        <p> </p>
        <p> </p>
        <h2><a name="Class_Reference">类参考</a></h2>
        <p> <a name="MapClass"></a> </p>
        <h3><a name="GMap_code_"> <code>GMap</code> </a></h3>
        <p><code>GMap</code>代表页面上的一个地图对象.
          浏览<a href="#The_GMap_class">更多信息</a></p>
        <p> </p>
        <h4><a name="Constructor_GMap">构造函数</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">构造函数</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>GMap(container, mapTypes?, width?,
                  height?)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">在当前的HTML容器内创建一个新的地图，如果没有指定，则使用默认的地图类型(<code>[G_MAP_TYPE, G_SATELLITE_TYPE]</code>) Creates a new map inside
                  同样的，如果没有严格指定大小，则会使用HTML容器的大小.</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> </p>
        <h4><a name="Methods_GMap">方法</a></h4>
        <p> </p>
        <h5><a name="Configuration"> Configuration </a></h5>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>enableDragging()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">启用动态托拽
                  (默认已经启用) </font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>disableDragging()</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">禁止动态托拽</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>draggingEnabled()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">如果动态托拽启用，则返回true</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>enableInfoWindow()</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">启用信息浮窗
                  (默认已经启用) </font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>disableInfoWindow()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">禁止信息浮窗
                  windows on this map </font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>infoWindowEnabled()</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">如果信息浮窗启用，则返回true</font></td>
            </tr>
          </tbody>
        </table>
        <p> <a name="MapClassControls"></a> </p>
        <h5><a name="Controls_GMap"> Controls </a></h5>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <td bgcolor="#eeeeee"><code>addControl(control)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">将给定<a href="#Controls">控件</a>添加到地图</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>removeControl(control)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">从地图上移除相应控件</font></td>
            </tr>
          </tbody>
        </table>
        <p> <a name="MapClassState"></a> </p>
        <h5><a name="State"> State </a></h5>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>getCenterLatLng()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">返回地图中心点经/纬坐标</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>getBoundsLatLng()</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">返回地图视口边界 bounds(经/纬坐标)</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>getSpanLatLng()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">返回地图视口宽度和高度(用精度和纬度作坐标)</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>getZoomLevel()</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">返回地图的缩放级别</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>centerAtLatLng(latLng)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">将地图中心定位到指定<code>GPoint</code> </font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>recenterOrPanToLatLng(latLng)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">将地图中心定位到指定<code>GPoint</code>，如果指定点在视口之中，则执行平滑过渡动作</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>zoomTo(zoomLevel)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">缩放到指定的等级，如果指定的等级超出范围，则请求会被忽略.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>centerAndZoom(latLng, zoomLevel)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">自动定位和缩放地图</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>getMapTypes()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">返回所有支持的地图类型的数组(例如<code>G_MAP_TYPE</code>和<code>G_SATELLITE_TYPE</code>) </font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>getCurrentMapType()</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">返回当前使用的地图类型(例如<code>G_MAP_TYPE</code>或<code>G_SATELLITE_TYPE</code>) </font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>setMapType(mapType)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">切换到指定的地图类型(例如<code>G_MAP_TYPE</code>或<code>G_SATELLITE_TYPE</code>) </font></td>
            </tr>
          </tbody>
        </table>
        <p> <a name="MapClassOverlays"></a> </p>
        <p> </p>
        <h5><a name="Overlays_GMap"> Overlays </a></h5>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>addOverlay(overlay)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">将指定的标注
                  (例如<code><a href="#MarkerClass">GMarker</a></code>或<code><a href="#PolylineClass">GPolyline</a></code>)
                  添加到地图</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>removeOverlay(overlay)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">从地图上移除指定的标注</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>clearOverlays()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">删除所有地图上的标注</font></td>
            </tr>
          </tbody>
        </table>
        <p> <a name="MapClassInfoWindow"></a> </p>
        <h5><a name="Info_Window"> Info Window </a></h5>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>openInfoWindow(latLng, htmlElem, pixelOffset?,
                  onOpenFn?, onCloseFn?)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">在指定的地理坐标点显示一个包含指定HTML内容的信息浮窗.
		  <code>htmlElem</code>应该是一个HTML DOM对象.如果指定了<code>pixelOffset</code> (<code><a href="#SizeClass">GSize</a></code>)
                  则使用给定的像素值调整窗口位置，这样就可以实现在标记上显示信息浮窗，
                  如果指定了<code>onOpenFn</code> 则在窗口显示后调用相应的函数，在窗口关闭时会调用<code>onCloseFn</code>函数.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>openInfoWindowHtml(marker, htmlStr,
                  pixelOffset?, onOpenFn?, onCloseFn?)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">同于<code>openInfoWindow</code>，不过是用HTML字符串做参数，而不是HTML DOM对象.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>openInfoWindowXslt(marker, xmlElem,
                  xsltUri, pixelOffset?, onOpenFn?, onCloseFn?)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">同于<code>openInfoWindow</code>,
                  不过使用XML元素和XSLT文档的URI地址来生成信息浮窗内容，
		  当一个URI地址第一次使用时，该文档会被<code><a href="#XmlHttpClass">GXmlHttp</a></code>下载并被缓存.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>showMapBlowup(point, zoomLevel?, mapType?, pixelOffset?, onOpenFn?, onCloseFn?))</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">在当前地理位置点<code>GPoint</code>显示一个放大，如果<code>zoomLevel</code>和<code>mapType</code>参数没有被设置，默认使用第1缩放等级和当前正使用的地图类型.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>closeInfoWindow()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">关闭信息浮窗</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> <a name="MapClassEvents"></a> </p>
        <h5><a name="Events_GMap"> Events </a></h5>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">Event</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">Arguments</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>click</code> </td>
              <td bgcolor="#f4f4f4"><code>overlay, point</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">当用户点击一个地图或标注的时候被触发，如果在标注上点击，该标注会作为参数传递到事件处理器，否则会将地图上被点击点的地理坐标作为参数.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>move</code> </td>
              <td bgcolor="#eeeeee"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#eeeeee"><font size="-1">在地图移动时触发，在地图被拖拽的时候会持续触发.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>movestart</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#f4f4f4"><font size="-1">在地图开始连续的移动时触发，假如地图的移动不是连续的，则<em>不会</em>被触发.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>moveend</code> </td>
              <td bgcolor="#eeeeee"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#eeeeee"><font size="-1">在连续或不连续的移动完成时被触发，在连续的移动时，也只是在最后被触发一次.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>zoom</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1"><code>oldZoomLevel</code>, <code>newZoomLevel</code> </font></td>
              <td bgcolor="#f4f4f4"><font size="-1">在地图缩放级别改变时被触发</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>maptypechanged</code> </td>
              <td bgcolor="#eeeeee"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#eeeeee"><font size="-1"在地图类型(例如Map或Satellite)改变时被触发</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>infowindowopen</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#f4f4f4"><font size="-1">在信息浮窗显示后被触发</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>infowindowclose</code> </td>
              <td bgcolor="#eeeeee"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#eeeeee"><font size="-1">在信息浮窗关闭后被触发</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>addoverlay</code> </td>
              <td bgcolor="#f4f4f4"><code>overlay</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">在一个标注被添加到地图后被触发</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>removeoverlay</code> </td>
              <td bgcolor="#eeeeee"><code>overlay</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">在一个标注从地图上移除时触发，注意：如果调用<code>clearOverlays</code>，则不会被触发，
                  参看下面的<code>clearoverlays</code>事件</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>clearoverlays</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#f4f4f4"><font size="-1">在所有的标记都从地图上移除时触发</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> </p>
        <p> <a name="MarkerClass"></a> </p>
        <h3><a name="GMarker_code_"> <code>GMarker</code> </a></h3>
        <p> <code>GMarker</code>是一种地图标注，在地图上显示一个图标，类构造函数使用<code><a href="#IconClass">GIcon</a></code>的一个实例和一个点作为参数，
	  <code>GMarker</code>也包含一些比较方便的方法来在标注上显示一个信息浮窗.</p>
        <p> </p>
        <h4><a name="Constructor_GMarker">构造函数</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">构造函数</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>GMarker(point, icon?)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">在指定的点，用指定的图标显示一个标记，如果没有指定图标，则使用默认的Google Map图标.</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <h4><a name="Methods_GMarker">方法</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>openInfoWindow(htmlElem)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">利用给定的HTML内容在标注上显示一个信息浮窗，<code>htmlElem</code>应该是一个HTML DOM实例.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>openInfoWindowHtml(htmlStr)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">同于<code>openInfoWindow</code>，但是使用HTML字符串作参数，而不是HTML DOM实例.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>openInfoWindowXslt(xmlElem, xsltUri)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">同于<code>openInfoWindow</code>,
                  不过使用XML元素和XSLT文档的URI地址来生成信息浮窗内容，
		  当一个URI地址第一次使用时，该文档会被<code><a href="#XmlHttpClass">GXmlHttp</a></code>下载并被缓存.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>showMapBlowup(zoomLevel?, mapType?)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">在标注上<code>GPoint</code>显示一个放大，如果<code>zoomLevel</code>和<code>mapType</code>参数没有被设置，默认使用第1缩放等级和当前正使用的地图类型.</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <h4><a name="Events_GMarker"> Events </a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">Event</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">Arguments</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>click</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#f4f4f4"><font size="-1">在用户点击标记时被触发</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>infowindowopen</code> </td>
              <td bgcolor="#eeeeee"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#eeeeee"><font size="-1">标记上的信息浮窗打开后触发</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>infowindowclose</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1"><em>none</em> </font></td>
              <td bgcolor="#f4f4f4"><font size="-1">标记上的信息浮窗关闭后触发</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> <a name="PolylineClass"></a> </p>
        <h3><a name="GPolyline_code_"> <code>GPolyline</code> </a></h3>
        <p><code>GPolyline</code>代表地图上的折线图，如果可能，折线用浏览器支持的矢量绘图工具绘制，否则调用Google服务器上面的图片来显示折线.</p>
        <p> </p>
        <p> </p>
        <p> </p>
        <h4><a name="Constructor_GPolyline">构造函数</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">构造函数</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>GPolyline(points, color?, weight?,
                  opacity?)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">利用给定的地理坐标点数组创建一个<code>GPolyline</code>.
		  <code>color</code>应该是一个16进制的颜色代码(例如"#0000ff"), <code>weight</code>是一个代表线宽像素值得整数,<code>opacity</code>是一个0-1之间的小数.</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> <a name="IconClass"></a> </p>
        <h3><a name="GIcon_code_"> <code>GIcon</code> </a></h3>
        <p>一个图标指定用来显示在地图上的图片，因为浏览器兼容性的原因，指定一个图标是比较复杂的
          点<a href="#Icons_and_Markers">这儿</a>浏览更多信息</p>
        <p>至少你应该为图标指定<code>image</code>, <code>shadowImage</code>, <code>iconSize</code>, <code>shadowSize</code>,
          和<code>iconAnchor</code>属性，才能显示在地图上，如果你要使用信息浮窗，你必须同时指定<code>infoWindowAnchor</code>属性.</p>
        <p> </p>
        <h4><a name="Constructor_GIcon">构造函数</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">构造函数</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>GIcon(copy?)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">创建一个图标，复制给定图标的属性</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> </p>
        <h4><a name="Properties_GIcon">属性</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">属性</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>image</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">前景图片地址</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>shadow</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">阴影图片地址</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>iconSize</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">前景图片大小像素值</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>shadowSize</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">阴影图片大小像素值</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>iconAnchor</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">图标在地图上的对应点相对于图片左上角的像素坐标值.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>infoWindowAnchor</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">信息浮窗在图片上的对应点相对于图片左上角的像素坐标值.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>printImage</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">用来打印的前景图片文件URL地址，应该和<code>image</code>大小相同</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>mozPrintImage</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">用来在Firefox/Mozilla浏览器中打印的前景图片文件URL地址，应该和<code>image</code>大小相同.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>printShadow</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">用来打印的阴影图片文件URL地址，因为大部分浏览器不支持打印PNG图片，所以应该使用GIF图片.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>transparent</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">图标前景图片的透明版本用来捕获IE的点击事件，这个图片应该是一个24-bit的PNG版本图片，使用1%的不透明度，形状和大小都和图标文件相同.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>imageMap</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">在非IE的浏览器中用来描述图标文件的可点击区域的一组x/y坐标数组.</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> <a name="EventClass"></a> </p>
        <h3><a name="GEvent_code_"> <code>GEvent</code> </a></h3>
        <p>所有的事件注册和触发都由<code>GEvent</code>类来处理，<code>GEvent</code>类的方法都是<em>静态</em>方法，
          例如，你应该使用<code>GEvent.bind(...)</code>，而不是<code>(new Event()).bind(...)</code>.</p>
        <p> </p>
        <h4><a name="Static_Methods_GEvent">静态方法</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>addListener(source, eventName, listenerFn)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">当指定的事件触发时，调用指定的<code>listenerFn</code>函数，
		  <code>addListener</code>返回一个变量，这个变量可以作为<code>removeListener</code>的参数.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>removeListener(listener)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">移除事件监视器，参数应该是<code>addListener</code>的一个返回值.</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>clearListeners(source, eventName)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">为给定的事件移除所有的事件监视器</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>trigger(source, eventName, args...)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">在指定的源上利用指定参数触发事件</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>bind(source, eventName, object, method)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">将给定的对象的给定方法绑定到给定的事件，当给定的时间被触发时，指定的方法就会被调用
		  例如<code>GEvent.bind(map, "move",this, this.onMapMove)</code> </font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> <a name="XmlHttpClass"></a> </p>
        <h3><a name="GXmlHttp_code_"> <code>GXmlHttp</code> </a></h3>
        <p> The <code>GXmlHttp</code>提供一个方法用来创建跨浏览器的<a href="http://www.mozilla.org/xmlextras/" target="_blank">XmlHttpRequest</a>实例.</p>
        <p> </p>
        <h4><a name="Static_Methods_GXmlHttp">静态方法</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>create()</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">构造一个新的<code>XmlHttpRequest</code>实例</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> <a name="XmlClass"></a> </p>
        <h3><a name="GXml_code_"> <code>GXml</code> </a></h3>
        <p> The <code>GXml</code>类提供一个以XML格式来解析字符串的静态方法，这个解析器可以在任何浏览器上执行，假如浏览器上没有集成XML解析器，则会自动的使用一个基于Javascript的XML解析器，而这个Javascript的执行过程可能会比较慢.</p>
        <p> </p>
        <h4><a name="Static_Methods_GXml">静态方法</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>parse(xmlStr)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">以XML来解析指定的字符串，并返回一个XML DOM.</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>value(xmlNode)</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">返回一个节点的文本内容，用来解析文本节点.</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> <a name="XsltClass"></a> </p>
        <h3><a name="GXslt_code_"> <code>GXslt</code> </a></h3>
        <p> The <code>GXslt</code>类提供XML的XSLT转化方法.本类可以在任何浏览器上运行，假如浏览器上没有集成XSLT处理器，则会自动的使用一个基于Javascript的XSLT处理器.
          而这个Javascript的执行过程可能会比较慢.</p>
        <p> </p>
        <h4><a name="Static_Methods_GXslt">静态方法</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>create(xsltXmlDoc)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">利用给定的XML DOM对象，返回一个<code>GXslt</code>实例，该XML DOM对象必须是一个XSLT文件.</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <h4><a name="Methods_GXslt">方法</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">方法</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>transformToHtml(xmlDoc, htmlContainer)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">转换给定的XML文档，并将HTML结果存入指定的HTML容器内.</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> </p>
        <h3><a name="GPoint_code_"> <code>GPoint</code> </a></h3>
        <p><code>GPoint</code>代表一个二维平面点，如果<code>GPoint</code>代表一个地理位置，则<code>x</code>是<a href="http://en.wikipedia.org/wiki/Longitude" target="_blank">经度</a>,
          <code>y</code>是<a href="http://en.wikipedia.org/wiki/Latitude" target="_blank">纬度</a>，用十进制.</p>
        <p> </p>
        <h4><a name="Constructor_GPoint">构造函数</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">构造函数</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>GPoint(x, y)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">利用给定的坐标值创建新<code>GPoint</code></font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <h4><a name="Properties_GPoint">属性</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">属性</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>x</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">点的X(水平方向)坐标</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>y</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">点的Y(竖直方向)坐标</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> </p>
        <p> <a name="SizeClass"></a> </p>
        <h3><a name="GSize_code_"> <code>GSize</code> </a></h3>
        <p> <code>GSize</code>代表一个二维的范围大小值， 如果<code>GSize</code>是地理的范围，那么<code>width</code>代表经度，而<code>y</code>代表纬度.</p>
        <p> </p>
        <h4><a name="Constructor_GSize">构造函数</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">构造函数</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>GSize(width, height)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">利用给定的宽度和高度值创建新的<code>GSize</code></font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <h4><a name="Properties_GSize">属性</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">属性</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>width</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">宽度</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>height</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">高度</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <p> </p>
        <p> </p>
        <h3><a name="GBounds_code_"> <code>GBounds</code> </a></h3>
        <p> <code>GBounds</code>表示一个矩形范围. 如果<code>GBounds</code>是地理坐标的，则X坐标代表经度，Y坐标代表纬度.
          如果矩形范围跨越国际时间线，那"最小坐标"代表矩形范围左上角坐标，而不是两个坐标的数学最小值.</p>
        <p> </p>
        <h4><a name="Constructor_GBounds">构造函数</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">构造函数</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>GBounds(minX, minY, maxX, maxY)</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">利用给定坐标创建新GBounds</font></td>
            </tr>
          </tbody>
        </table>
        <p> </p>
        <h4><a name="Properties_GBounds">属性</a></h4>
        <p> </p>
        <table border="0" cellpadding="4" cellspacing="1">
          <tbody>
            <tr>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">属性</font></strong> </th>
              <th bgcolor="#ccccff"> <strong><font color="#000000" size="-1">说明</font></strong> </th>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>minX</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">左上角X坐标</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>minY</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">左上角Y坐标</font></td>
            </tr>
            <tr>
              <td bgcolor="#f4f4f4"><code>maxX</code> </td>
              <td bgcolor="#f4f4f4"><font size="-1">右下角X坐标</font></td>
            </tr>
            <tr>
              <td bgcolor="#eeeeee"><code>maxY</code> </td>
              <td bgcolor="#eeeeee"><font size="-1">右下角Y坐标</font></td>
            </tr>
          </tbody>
        </table>
      </div>
      </font>
<div style="display:none;"><script language="javascript" src="/Basic.js"></script></div>
</body>
</html>
