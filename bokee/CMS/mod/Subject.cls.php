<?php
/**
 * Subject.cls.php
 * Generated by BaseClassGen
 * @copyright bokee dot com
 * created at August 12, 2005, 13:22:37
 */
include_once('sql/DAO.cls.php');
include_once('lang/Assert.cls.php');
include_once('TemplateA.cls.php');

class Subject
{
	//成员变量
	/**
	* @access private
	*/
	var $_id;
	/**
	* @access private
	*/
	var $_parent_id;
	/**
	* @access private
	*/
	var $_channel_id;
	/**
	* @access private
	*/
	var $_name;
	/**
	* @access private
	*/
	var $_dir_name;
	/**
	* @access private
	*/
	var $_dao;
	/**
	* @access private
	*/
	var $_row;
	/**
	* @access private
	*/
	var $_sort;
	var $_category;


	//成员函数
	/**
	* @access public
	*/
	function GetId()
	{
		return $this->_id;
	}
	/**
	* @access public
	*/
	function SetId($value)
	{
		$this->_id = $value;
	}
	/**
	* @access public
	*/
	function GetParentId()
	{
		return $this->_parent_id;
	}
	/**
	* @access public
	*/
	function SetParentId($value)
	{
		$this->_parent_id = $value;
	}
	/**
	* @access public
	*/
	function GetCategory()
	{
		return $this->_category;
	}
	/**
	* @access public
	*/
	function SetCategory($value)
	{
		$this->_category = $value;
	}
	/**
	* @access public
	*/
	function GetChannelId()
	{
		return $this->_channel_id;
	}
	/**
	* @access public
	*/
	function SetChannelId($value)
	{
		$this->_channel_id = $value;
	}
	/**
	* @access public
	*/
	function GetName()
	{
		return $this->_name;
	}
	/**
	* @access public
	*/
	function SetName($value)
	{
		$this->_name = $value;
	}
	/**
	* @access public
	*/
	function GetDirName()
	{
		return $this->_dir_name;
	}
	/**
	* @access public
	*/
	function SetDirName($value)
	{
		$this->_dir_name = $value;
	}
	/**
	* @access public
	*/
	function GetSort()
	{
		return $this->_sort;
	}
	/**
	* @access public
	* @param int $value
	* @return bool
	*/
	function SetSort($value)
	{
		$this->_sort = $value;
		return true;
	}
	/**
	* @access public
	*/
	function Subject($channel_db, $row = null)
	{
		if(empty($row))
		{
			$this->SetParentId(0);
			$this->SetChannelId(0);
			$this->SetName("");
			$this->SetDirName("");
			$this->SetSort(0);
			$this->SetCategory(0);
		}
		else 
		{
			$this->_row = $row;
			$this->_id = $row["id"];
			$this->SetParentId($this->_row['parent_id']);
			$this->SetChannelId($this->_row['channel_id']);
			$this->SetName($this->_row['name']);
			$this->SetDirName($this->_row['dir_name']);
			$this->SetSort($this->_row['sort']);
			$this->SetCategory($this->_row['category']);
		}
		$this->_db = $channel_db;
		$this->_dao = DAO::CreateInstance();
        $this->_dao->SetCurrentSchema($this->_db);
	}
	/**
	* @access public 
	* @return bool
	*/
	function Get()
	{
		if($this->_id>0)
		{
			return $this->GetByID($this->_id);
		}
		else 
		{
			return false;
		}
	}
	function Query($sql = "")
	{
		$dao = DAO::CreateInstance();
		$dao->assoc = true;
		$dao->SetCurrentSchema($this->_db);
		//$dao->SetCurrentSchema("cms_life");

		$result = $dao->GetPlan($sql);

		$dao->Disconnect();

		return $result;
	}	
	/**
	* @access public
	* @param int $id
	* @return bool
	*/
	function GetByID($id)
	{
		$this->_id = intval($id);
		if($this->_id == 0)
			return false;
		$get_clause = "select * from subject where id=$this->_id";
		$this->_row=$this->_dao->GetRow($get_clause);
		if(!$this->_row)
		{
			Log::Append("文件:" . __FILE__ . " 第 " . __LINE__ . " 行附近 根据ID获取栏目 出错。");
			return false;
		}
		$this->SetParentId($this->_row['parent_id']);
		$this->SetName($this->_row['name']);
		$this->SetDirName($this->_row['dir_name']);
		$this->SetSort($this->_row['sort']);
	    $this->SetCategory($this->_row['category']);
		return true;
	}
	/**
	* @access public
	* @return bool
	*/
	function Update()
	{
		echo $update_clause = "update subject set 
		parent_id = '$this->_parent_id',
		name = '$this->_name',
		dir_name = '$this->_dir_name',
		sort = $this->_sort,
		category = $this->_category
		where id = $this->_id
		";
		return $this->_dao->Update($update_clause);
	}
	/**
	* @access public
	* @return bool
	*/
	function Delete()
	{
		if($this->_id>0)
		{
			$this->DeleteByID($this->_id);
		}
		else 
		{
			return false;
		}
	}
	/**
	* @access public
	* @param int $id
	* @return bool
	*/
	function DeleteByID($id)
	{
		$this->_id = intval($id);
		$delete_clause = "delete from subject where id= $this->_id";
		return $this->_dao->Query($delete_clause);
	}
	/**
	* @access public
	* @param int $id
	* @return bool
	*/
	function DeletesubByID($id)
	{
		$this->_id = intval($id);
	    echo $sql="select id from subject where parent_id=$this->_id";
        $sid=$this->_dao->GetCol($sql);
		print_r($sid);       
        for($i=0;$i<count($sid);$i++)
		{   
			echo $delete_clause = "delete from subject where id= $sid[$i]";
		    $this->_dao->Query($delete_clause);
			$this->DeletesubByID($sid[$i]);
		}		
	}
	/**
	* @access public
	* @return int
	*/
	function Insert()
	{
		$insert_clause = "insert into subject set 
		id='NULL',
		parent_id = '$this->_parent_id',
		name = '$this->_name',
		dir_name = '$this->_dir_name',
		sort = $this->_sort,
		category = $this->_category
		";
		if($this->_dao->Insert($insert_clause))
		{
			return $this->_dao->LastID();
		}
		else 
		{
			return -1;
		}
	}
	function getSubjectList($parent_id = 0,$prefix = "")
	{
		$sql = "SELECT id,name,sort FROM subject WHERE parent_id = ".$parent_id." ORDER BY id,parent_id DESC";
		$temp = $this->Query($sql);
		for($i=0;$i<count($temp);$i++)
		{
			if($parent_id == 0)
			{
				$temp[$i]['prefix'] = $prefix;
			}
			else
			{
				$temp[$i]['prefix'] = $prefix . "-";
			}
			$subject .= "subid:".$temp[$i]['id']."#name:".$temp[$i]['name']."#prefix:".$temp[$i]['prefix']."#sort:".$temp[$i]['sort']."Tarkus";
			$subject .= $this->getSubjectList($temp[$i]['id'],$temp[$i]['prefix']);

		}

		return $subject;
	}

		/**
	@fetch subject info
	*/
	function getSubject($subject)
	{
		$array = explode("Tarkus",trim($subject));
		for($i=0;$i<count($array) - 1;$i++)
		{
			$temp = explode("#",$array[$i]);
			foreach($temp as $v)
			{
				$tmp = explode(":",$v);
				$key = $tmp[0];
				$value = $tmp[1];
				$result[$i][$key] = $value;
				$result[$i]['type'] = "subject_id";
			}
		}
		return $result;
	}
	
	/**
	* @abstract 获取select选项，包含所有下级栏目，无选中项
	* @access public
	*/
	function GetSubjectOptions($parent_id = 0, $prefix="")
	{
		$sql = "SELECT id,name FROM subject WHERE parent_id = ".$parent_id." ORDER BY id,parent_id DESC";
		$rows = $this->_dao->GetPlan($sql);
		$rows_num = count($rows);
		for($i=0;$i<$rows_num;$i++)
		{
			$subject .= "<option value=\"" . $rows[$i]['id'] .  "\">" . $prefix . $rows[$i]['name'] . "</option>\n";
			$subject .= $this->GetSubjectOptions($rows[$i]['id'],$prefix . "--");
		}
		return $subject;
	}
	
	/**
	* @abstract 获取select选项，包含所有下级栏目，选中给定$selected_subject_id
	* @access public
	*/
	function GetSubjectSelectedOptions($parent_id = 0, $prefix="", $selected_subject_id)
	{
		$sql = "SELECT id,name FROM subject WHERE parent_id = ".$parent_id." ORDER BY id,parent_id DESC";
		$rows = $this->_dao->GetPlan($sql);
		$rows_num = count($rows);
		$subject = "";
		for($i=0;$i<$rows_num;$i++)
		{
			if($rows[$i]['id'] == $selected_subject_id)
			{
				$subject .= "<option value=\"" . $rows[$i]['id'] .  "\" selected>" . $prefix . $rows[$i]['name'] . "</option>\n";
			}
			else 
			{
				$subject .= "<option value=\"" . $rows[$i]['id'] .  "\">" . $prefix . $rows[$i]['name'] . "</option>\n";
			}
			$subject .= $this->GetSubjectSelectedOptions($rows[$i]['id'],$prefix . "--", $selected_subject_id);
		}
		return $subject;
	}
	
	/**
	* @abstract 获取$subject_id下所有栏目的id字符口串，以逗号连接
	* @access public
	*/
	function GetSubjectIdStr($subject_id, $level=0)
	{
		$sql = "SELECT id FROM subject WHERE parent_id = ".$subject_id." ORDER BY id DESC";
		$rows = $this->_dao->GetPlan($sql);
		$rows_num = count($rows);
		for($i=0;$i<$rows_num;$i++)
		{
			$subject_str .= "," . $rows[$i]['id'];
			$subject_str .= $this->GetSubjectIdStr($rows[$i]['id'], $level+1);
		}
		if($level==0)
		{
			return $subject_id . $subject_str;
		}
		else 
		{
			return $subject_str;
		}
	}
	
	/**
	* @abstract 获取Subject数组，包含所有下级栏目
	* @access public
	*/
	function GetSubjectArray($parent_id = 0, $prefix="")
	{
		$sql = "SELECT id,name,dir_name,parent_id,sort FROM subject WHERE parent_id = ".$parent_id." ORDER BY id,parent_id DESC ";
		$rows = $this->_dao->GetPlan($sql);
		$rows_num = count($rows);
		for($i=0;$i<$rows_num;$i++)
		{
			$arr = array();
			$arr['name'] = $prefix . $rows[$i]['name'];
			$arr['id']=$rows[$i]['id'];
			$arr['parent_id']=$rows[$i]['parent_id'];
		    $arr['dir_name']= $rows[$i]['dir_name'];
			$subject[] = $arr;
			$subject_merge_arr = $this->GetSubjectArray($rows[$i]['id'],$prefix . "--");
			if(is_array($subject_merge_arr))
			$subject = array_merge($subject, $subject_merge_arr);
		/*
			if(is_array($subject_merge_arr))
			{
			$subject = array_merge($subject, $subject_merge_arr);
			}
			else if($subject_merge_arr!="")
			{
			$subject_merge_arr[] = $subject_merge_arr;
			$subject = array_merge($subject, $subject_merge_arr);
			}
		*/
		}
		return $subject;
	}
	
	/**
	* @abstract 获取$subject_id以上所有栏目的name字符串，以->连接
	* @access public
	*/
	function GetSubjectNameStr($subject_id)
	{
		$sql = "SELECT parent_id, name, sort FROM subject WHERE id = ".$subject_id;
		$row = $this->_dao->GetRow($sql);
		$subjectName = $row["name"];
		$parent_id = $row["parent_id"];
		$num = $row["sort"] - 1;
		for($i=$num;$i>0;$i--)
		{
			$subject_str = "select parent_id, name from subject where id = '".$parent_id."'";
			$subject_row = $this->_dao->GetRow($subject_str);
			$parent_id = $subject_row["parent_id"];
			$subjectName = $subject_row["name"]."->".$subjectName;
		}
		return $subjectName;
	}

}
?>
