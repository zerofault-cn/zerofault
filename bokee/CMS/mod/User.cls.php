<?php
/**
 * User.cls.php
 * Generated by BaseClassGen
 * @author  yudunde@bokee.com
 * @copyright bokee dot com
 * created at 8-15 13:18
 */

require_once('sql/DAO.cls.php');
require_once('lang/Assert.cls.php');
require_once('com/Log.cls.php');

/* Addin' access control methods by Jing Xiang 
   Aug. 30th, 2005				*/
require_once('role.inc.php');


class User
{
	//Properties
	/**
	* @access private
	*/
	var $_id;
	/**
	* @access private
	*/
	var $_name;
	/**
	* @access private
	*/
	var $_real_name;
	/**
	* @access private
	*/
	var $_password;
	/**
	* @access private
	*/
	var $_last_login;
	/**
	* @access private
	*/
	var $_article_num;
	/**
	* @access private
	*/
	var $_create_time;
	/**
	* @access private
	*/
	var $_email;
	/**
	* @access private
	*/
	var $_cellphone;
	/**
	* @access private
	*/
	var $_rss_user_id;

	/**
	* @access private
	* @abstract  角色ID分为几种：1:系统管理员 2:总编 3:主编 4:编辑  5:广告
	* Modified by Jing Xiang @Aug. 30th. please see the config 
	* file for new usage
	*/
	var $_role_id;
	/**
	* @access private
	*/
	var $_dao;
	/**
	* @access private
	*/
	var $_row;


	//Methods
	/**
	* @access public
	*/
	function GetId()
	{
		return $this->_id;
	}
	/**
	* @access public
	*/
	function SetId($value)
	{
		$this->_id = $value;
	}
	/**
	* @access public
	*/
	function GetName()
	{
		return $this->_name;
	}
	/**
	* @access public
	*/
	function SetName($value)
	{
		$this->_name = $value;
	}
	/**
	* @access public
	*/
	function GetRealName()
	{
		return $this->_real_name;
	}
	/**
	* @access public
	*/
	function SetRealName($value)
	{
		$this->_real_name = $value;
	}
	/**
	* @access public
	*/
	function GetPassword()
	{
		return $this->_password;
	}
	/**
	* @access public
	*/
	function SetPassword($value)
	{
		$this->_password = $value;
	}
	/**
	* @access public
	*/
	function GetLastLogin()
	{
		return $this->_last_login;
	}
	/**
	* @access public
	*/
	function SetLastLogin($value)
	{
		$this->_last_login = $value;
	}
	/**
	* @access public
	*/
	function GetArticleNum()
	{
		return $this->_article_num;
	}
	/**
	* @access public
	*/
	function SetArticleNum($value)
	{
		$this->_article_num = $value;
	}
	/**
	* @access public
	*/
	function GetCreateTime()
	{
		return $this->_create_time;
	}
	/**
	* @access public
	*/
	function SetCreateTime($value)
	{
		$this->_create_time = $value;
	}
	/**
	* @access public
	*/
	function GetEmail()
	{
		return $this->_email;
	}
	/**
	* @access public
	*/
	function SetEmail($value)
	{
		$this->_email = $value;
	}
	/**
	* @access public
	*/
	function GetCellphone()
	{
		return $this->_cellphone;
	}
	/**
	* @access public
	*/
	function SetCellphone($value)
	{
		$this->_cellphone = $value;
	}
	/**
	* @access public
	*/
	function GetRoleId()
	{
		return $this->_role_id;
	}
	/**
	* @access public
	*/
	function SetRoleId($value)
	{
		$this->_role_id = $value;
	}
	/**
	* @access public
	*/
	function SetRSSUserID($value)
	{
		$this->_rss_user_id = $value;
	}
	/**
	* @access public
	*/
	function GetRSSUserID()
	{
		return $this->_rss_user_id;
	}
	
	/**
	* @access public
	* @abstract  构造函数
	* @param array $row
	*/
	function User($row = null)
	{
		if(empty($row))
		{
			session_start();
			$this->_id = $_SESSION['user']['id'];
			//log::Append("userid:" . $this->_id);
			$this->SetName($_SESSION['user']['name']);
			$this->SetRealName("");
			$this->SetPassword($_SESSION['user']['password']);
			$this->SetLastLogin("");
			$this->SetArticleNum(0);
			$this->SetCreateTime("");
			$this->SetEmail($_SESSION['user']['email']);
			$this->SetCellphone("");
			$this->SetRoleId($_SESSION['user']['role_id']);
			$this->SetRSSUserID($_SESSION['user']['rss_uid']);
		}
		else 
		{
			$this->_row = $row;
			$this->initUseRow();
		}
		$this->_dao = DAO::CreateInstance();
	}

	/**
	* @access private
	* @abstract 使用私有变量$_row初始化私有变量
	*/
	function initUseRow()
	{
		$this->_id = $this->_row["id"];
		$this->SetName($this->_row['name']);
		$this->SetRealName($this->_row['real_name']);
		$this->SetPassword($this->_row['password']);
		$this->SetLastLogin($this->_row['last_login']);
		$this->SetArticleNum($this->_row['article_num']);
		$this->SetCreateTime($this->_row['create_time']);
		$this->SetEmail($this->_row['email']);
		$this->SetCellphone($this->_row['cellphone']);
		$this->SetRoleId($this->_row['role_id']);
		$this->SetRSSUserID($this->_row['rss_user_id']);
	}
	
	/**
	* @access public
	* @return  int
	*/
	function Get()
	{
		if($this->_id)
		{
			return $this->GetByID($this->_id);
		}
		else 
			return false;
	}
	
	/**
	* @access public
	* @param int $id
	* @return  int
	*/
	function GetByID($id)
	{
		$this->_id = intval($id);
		$get_clause = "select * from user where id=$this->_id";
		$this->_row=$this->_dao->GetRow($get_clause);
		if(!$this->_row)
			return false;
		$this->initUseRow();
		return true;
	}
	/**
	* @access public
	* @return  bool
	*/
	function Update()
	{
		$update_clause = "update user set 
		name = '$this->_name',
		real_name = '$this->_real_name',
		password = '$this->_password',
		last_login = '$this->_last_login',
		article_num = '$this->_article_num',
		create_time = '$this->_create_time',
		email = '$this->_email',
		cellphone = '$this->_cellphone',
		role_id = $this->_role_id,
		rss_user_id = '$this->_rss_user_id'
		where id=$this->_id
		";

		return $this->_dao->Update($update_clause);
	}
	
	/**
	* @access public
	* @return bool 
	*/
	function Delete()
	{
		if($this->_id>0)
		{
			return $this->DeleteByID($this->_id);
		}
		else 
		{
			return false;
		}
	}
	
	/**
	* @access public
	* @param int $id
	* @return bool 
	*/
	function DeleteByID($id)
	{
		$id = intval($id);
		$delete_clause = "delete from user where id= $id";
		$this->_dao->Query($delete_clause);
		$delete_clause = "delete from user_channel where user_id=$id";
		return $this->_dao->Query($delete_clause);
	}
	/**
	* @access public
	* @return int
	*/
	function Insert($channel_id)
	{
		$insert_clause = "insert into user set 
		name = '$this->_name',
		real_name = '$this->_real_name',
		password = '$this->_password',
		create_time = '$this->_create_time',
		email = '$this->_email',
		cellphone = '$this->_cellphone',
		role_id = $this->_role_id
		";
		if(!$this->_dao->Insert($insert_clause))
		{
			return -1;	
		}
		$lastid = $this->_dao->LastID();
		if(!empty($channel_id))
		{
			for($k=0;$k<count($channel_id);$k++)
			{   
				 echo $insert_clause = "insert into user_channel set user_id = " . $lastid . ", channel_id = '$channel_id[$k]'";
			     if(!$this->_dao->Insert($insert_clause))
			     {
				     return -1;	
			     }
		     }
		    //return $this->_dao->LastID();
		}
	}
	
	/**
	* @access public
	* @abstract  验证用户
	* @return bool
	*/
	function GetByNamePassword($username, $password)
	{
		$this->SetName($username);
		$this->SetPassword($password);
		
		$sql = "select * from user where name='" . $this->_name . "' and password='" . $this->_password . "'";
		
		$this->_row=$this->_dao->GetRow($sql);
		if(!$this->_row)
			return false;
			
		$this->initUseRow();

		$expire = time()+60*30;
		setcookie("user[id]", $this->_id, $expire);
	    setcookie("user[username]", $this->_name, $expire);
	    setcookie("user[password]", $this->_password, $expire);
	    setcookie("user[email]", $this->_email, $expire);
	                
//		if(empty($_SESSION['user']))
//		{
//	    	session_start();
//		}
	    //  设置 session
	    if ( !session_is_registered('user') ){
	        session_register('user');
	    }
	    $_SESSION['user']['id'] = $this->_id;
	    $_SESSION['user']['role_id'] = $this->_role_id;
	    $_SESSION['user']['name'] = $this->_name;
	    $_SESSION['user']['password'] = $this->_password;
	    $_SESSION['user']['email'] = $this->_email;
	    $_SESSION['user']['rss_uid'] = $this->_rss_user_id;
        
	    $sql = "update user set last_login = '" . date('Y-m-d H:i:s') . "' where id = $this->_id";
	    $this->_dao->Query($sql);
	    $sql = "insert into login_log set user_name = '$this->_name', login_time = '" . date('Y-m-d H:i:s') . "'";
	    $this->_dao->Query($sql);
		return true;

	}
	
	/**
	* @abstract 验证用户是否登录
	* @access public
	* @return bool
	*/
	function Authorize()
	{
		// 如果使用session
    	//session_start();
        if ( isset($_SESSION['user']) ){
            return true;
        } else {
            if ( !isset($_COOKIE['user']) ){
            	// 销毁 session       
        		session_destroy();
                return false;
            } else {
                if ( $this->GetByNamePassword($_COOKIE['user']['username'],
                                   $_COOKIE['user']['password'])){
                    return true;
                } else {
                	// 销毁 session       
        			session_destroy();
                    return false;
                }
                
            }
        }
	}
	
	/**
	* @abstract 退出系统
	* @access public
	* @return bool
	*/
	function Logout()
	{
		// 如果使用session
//    	session_start();   
        // 设置 cookie
        setcookie("user[id]", null, 0);
        setcookie("user[username]", null, 0);
        setcookie("user[password]", null, 0);
        setcookie("user[email]", null, 0);
        
        // 销毁 session        
        session_destroy();
        return true;
	}


	/**
	 * Modification from here by Jing Xiang @Aug. 30th, 2005,
	 * Please check the inc file for detailed role_id mapping
	 */

	
	/**
	* @method GetRoleName
	* Modified by Jing Xiang 
	* @Aug. 30th, 2005
	* @access public
	* @abstract 获取role_id所对应的权限名称
	* @return string
	*/
	function GetRoleName($role_id)
	{
		$role_prop = $this->getRoleProp($role_id);
		return $role_prop['name'];
	}

	/** 
	* @method ValidatePerm
	* @access public
	* @param array $request
	* return boolean  
	*/
	function ValidatePerm ($request){
		//系统调用，不需要验证权限
		$system_request = array ('login', 'rss_article_do_add', 'article_comment_feed_back', 'cron_template_publish','cron_template_publish_more', 'update_spec_tpl');
		//Log::Append("文件:" . __FILE__ . " 第 " . __LINE__ . " 行附近 权限外操作 " . $do . "。");
		if(in_array($request['do'], $system_request))
			return true;
			
		if ( !$this->Authorize() ) 
		{
			return false;
		}
		
		$ip_array = array("211.152.20.34", "218.249.35.66", "211.152.20.54", "127.0.0.1");
		$user_id_array = array(94,99,111,119,131,134,139,141,146,160,168,187,198,200,203,210,222,225,228,229,237);
		if(!in_array($_SERVER['REMOTE_ADDR'], $ip_array) && !in_array($_SESSION['user']['id'], $user_id_array))
		{
			log::Append("非法登录请求，来自于：" . $_SERVER['REMOTE_ADDR']);
			die("CMS系统仅能在公司内部使用!");
		}
		
		$perm = array (); 
		$perm = $this->getRoleProp ($_SESSION['user']['role_id']);
		
		//如果是管理员级（系统管理/总编）直接返回true
		if($perm['master'] == 1)
			return true;
		
		//否则的话进行下面的判断
		if (array_key_exists("do", $request) ) {
			$do = $request['do'];
		}
		else {
			die("没有指定动作!");
		}
		
		//如果是权限外操作，返回失败
		if(in_array($do, $perm['deny_action']))
		{
			Log::Append("文件:" . __FILE__ . " 第 " . __LINE__ . " 行附近 权限外操作 " . $do . "。");
			return false;
		}

		//判断是否对此频道有管理权限
		if (array_key_exists ("channel_name", $request) ) {
			$channel_name = $request['channel_name'];
			$sql = "select id from channel where dir_name='" . $channel_name . "'";
			$channel_id = $this->_dao->GetOne($sql);
		} 
		else {
			return true;
		}
		$channel_name_num = count($perm['channel_names']);
		$channel_names = array();
		for($i=0;$i<$channel_name_num;$i++)
		{
			$channel_names[$i] = $perm['channel_names'][$i]['dir_name'];
		}
		if(!in_array($channel_name, $channel_names))
		{
			//如果没有权限则返回
			//Log::Append("文件:" . __FILE__ . " 第 " . __LINE__ . " 行附近 权限外操作 " . $do . " 对频道 " . $request['channel_name'] . " 没有操作权限。" . print_r($channel_names, true) . print_r($perm, true));
			return false;
		}
		return true;
	}		

	/**	
	* @method getRoleProp
	* @access private
	* @param int $role_id 
	* @return array $role_prop
	*/
	function getRoleProp ($role_id) {
		global $ROLE_SETTINGS;
		$role_perm = $ROLE_SETTINGS[$role_id];
		//如果权限小于总编，需要获取有权限的频道
		//Log::Append("master:" . $role_perm['master']);
		if($role_perm['master'] != 1 )
		{
			$role_perm['channel_names'] = $this->GetChannelNames();
		}
		//Log::Append("channel_names:" . $role_perm['channel_names']);
		return $role_perm;
	}
	
	/** 
	* @abstract 获取此用户有权限管理的频道数据库名
	*/
	function GetChannelNames()
	{
		$sql = "select c.dir_name from user_channel uc, channel c where uc.user_id=" . $this->_id . " and uc.channel_id = c.id";
		//Log::Append("get channel_names:" . $sql);
		$rows = $this->_dao->GetPlan($sql);
		//Log::Append("get channel_names:" . print_r($rows, true));
		return $rows;
	}
	
	/**
	* @abstract 获取此用户有权限管理的频道id
	*/
	function GetChannelIDs()
	{
		$sql = "select channel_id from user_channel where user_id=" . $this->_id;
		$rows = $this->_dao->GetPlan($sql);
		return $rows;
	}
	
	/**
	* @access public
	* @abstract 今天发文数统计
	* @return int $article_num
	*/
	function GetTodayArticle()
	{
		$today = date('Y-m-d') . " 00:00:00";
		$sql = "select count(*) as article_num from article where user_id=$this->_id and create_time>'" . $today . "'";
		$this->_dao->SetCurrentSchema('cms_sports');
		$article_num = $this->_dao->GetOne($sql);
		$this->_dao->SetCurrentSchema('cms');
		return $article_num;
	}
	
	/**
	* @access public
	* @abstract 今天转移rss文章数统计
	* @return int $article_num
	*/
	function GetTodayRSSArticle()
	{
		$today = date('Ymd') . "000000";
		$sql = "select count(*) as article_num from rel_article_subject where user_id=$this->_id and updatetime>'" . $today . "'";
		$this->_dao->SetCurrentSchema('cms_sports');
		$article_num = $this->_dao->GetOne($sql);
		$this->_dao->SetCurrentSchema('cms');
		return $article_num;
	}
	
	/**
	* @access public
	* @abstract 本周发文数统计
	* @return int $article_num
	*/
	function GetWeekArticle()
	{
		$week_day = date('w');
		$month_day = date('j');
		if($month_day>$week_day)
			$mtime = date('Y-m-d', mktime(0, 0, 0, date('n'), $month_day-$week_day, date('Y'))) . " 00:00:00";
		else 
		{
			$month_i = date('n');
			if($month_i>1)
			{
				$prev_month_days = date('t', mktime(0, 0, 0, $month_i-1, 1, date('Y')));
				$mtime = date('Y-m-d', mktime(0, 0, 0, $month_i-1, $prev_month_days+$month_day-$week_day, date('Y'))) . " 00:00:00";
			}
			else 
			{
				$year_i = date('Y');
				$prev_month_days = date('t', mktime(0, 0, 0, 12, 1, $year_i-1));
				$mtime = date('Y-m-d', mktime(0, 0, 0, 12, $prev_month_days+$month_day-$week_day, $year_i-1)) . " 00:00:00";
			}
		}
		$this->_dao->SetCurrentSchema('cms_sports');
		$sql = "select count(*) as article_num from article where user_id=$this->_id and create_time>'" . $mtime . "'";
		$article_num = $this->_dao->GetOne($sql);
		$this->_dao->SetCurrentSchema('cms');
		return $article_num;
	}
	
	/**
	* @access public
	* @abstract 本周转移RSS文章数统计
	* @return int $article_num
	*/
	function GetWeekRSSArticle()
	{
		$week_day = date('w');
		$month_day = date('j');
		if($month_day>$week_day)
			$mtime = date('Ymd', mktime(0, 0, 0, date('n'), $month_day-$week_day, date('Y'))) . "000000";
		else 
		{
			$month_i = date('n');
			if($month_i>1)
			{
				$prev_month_days = date('t', mktime(0, 0, 0, $month_i-1, 1, date('Y')));
				$mtime = date('Ymd', mktime(0, 0, 0, $month_i-1, $prev_month_days+$month_day-$week_day, date('Y'))) . "000000";
			}
			else 
			{
				$year_i = date('Y');
				$prev_month_days = date('t', mktime(0, 0, 0, 12, 1, $year_i-1));
				$mtime = date('Ymd', mktime(0, 0, 0, 12, $prev_month_days+$month_day-$week_day, $year_i-1)) . "000000";
			}
		}
		$this->_dao->SetCurrentSchema('cms_sports');
		$sql = "select count(*) as article_num from rel_article_subject where user_id=$this->_id and updatetime>'" . $mtime . "'";
		$article_num = $this->_dao->GetOne($sql);
		$this->_dao->SetCurrentSchema('cms');
		return $article_num;
	}
	
	/**
	* @access public
	* @abstract  本月发文数统计
	* @return int $article_num
	*/
	function GetMonthArticle()
	{
		$mtime = date('Y-m-d', mktime(0, 0, 0, date('n'), 1, date('Y'))) . " 00:00:00";
		$sql = "select count(*) as article_num from article where user_id=$this->_id and create_time>'" . $mtime . "'";
		$this->_dao->SetCurrentSchema('cms_sports');
		$article_num = $this->_dao->GetOne($sql);
		$this->_dao->SetCurrentSchema('cms');
		return $article_num;
	}
	
	/**
	* @access public
	* @abstract 本月RSS转移文章数统计
	* @return int $article_num
	*/
	function GetMonthRSSArticle()
	{
		$mtime = date('Ymd', mktime(0, 0, 0, date('n'), 1, date('Y'))) . "000000";
		$sql = "select count(*) as article_num from rel_article_subject where user_id=$this->_id and updatetime>'" . $mtime . "'";
		$this->_dao->SetCurrentSchema('cms_sports');
		$article_num = $this->_dao->GetOne($sql);
		$this->_dao->SetCurrentSchema('cms');
		return $article_num;
	}
}
?>

