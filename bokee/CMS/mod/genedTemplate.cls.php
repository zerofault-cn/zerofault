<?php
/**
 * Template.cls.php
 * Generated by BaseClassGen
 * @copyright bokee dot com
 * created at August 12, 2005, 13:22:38
 */

include_once('sql/DAO.cls.php');
include_once('lang/Assert.cls.php');

class Template
{
	//Properties
	/**
	* @access private
	*/
	var $_id;
	/**
	* @access private
	*/
	var $_channel_id;
	/**
	* @access private
	*/
	var $_name;
	/**
	* @access private
	*/
	var $_file_name;
	/**
	* @access private
	*/
	var $_dao;
	/**
	* @access private
	*/
	var $_row;
	/**
	* @access private
	*/
	var $_path;
	/**
	* @access private
	*/
	var $_content;
	/**
	* @access private
	*/
	var $_sort;
	/**
	* @access private
	*/
	var $_is_default;
	/**
	* @access private
	*/
	var $_subject_id;
	/** 
	* @access private
	*/
	var $_db;


	//Methods
	/**
	* @access public
	*/
	function GetId()
	{
		return $this->_id;
	}
	/**
	* @access public
	*/
	function SetId($value)
	{
		$this->_id = $value;
	}
	/**
	* @access public
	*/
	function GetChannelId()
	{
		return $this->_channel_id;
	}
	/**
	* @access public
	*/
	function SetChannelId($value)
	{
		$this->_channel_id = $value;
	}
	/**
	* @access public
	*/
	function GetName()
	{
		return $this->_name;
	}
	/**
	* @access public
	*/
	function SetName($value)
	{
		$this->_name = $value;
	}
	/**
	* @access public
	* @return string $path
	*/
	function GetPath()
	{
		return $this->_path;
	}
	/**
	* @access public
	* @param string $value
	*/
	function SetPath($value)
	{
		$this->_path = $value;
	}
	/** 
	* @access public
	* @return string $content
	*/
	function GetContent()
	{
		return $this->_content;
	}
	/**
	* @access public
	* @param string $value
	* @return bool
	*/
	function SetContent($value)
	{
		$this->_content = $value;
	}
	/**
	* @access public
	* @return string $filename
	*/
	function GetFileName()
	{
		return $this->_file_name;
	}
	/**
	* @access public
	* @param string $value
	* @return bool
	*/
	function SetFileName($value)
	{
		$this->_file_name = $value;
		$this->_path = $this->_db . "/" . $this->_file_name;
	}
	/**
	* @access public
	* @return string $sort
	*/
	function GetSort()
	{
		return $this->_sort;
	}
	/**
	* @access public
	* @param string $value
	* @return bool
	*/
	function SetSort($value)
	{
		$this->_sort = $value;
		return true;
	}
	/**
	* @access public
	* @return bool $is_default
	*/
	function GetIsDefault()
	{
		return $this->_is_default;
	}
	/**
	* @access public
	* @param bool $value
	* @return bool
	*/
	function SetIsDefault($value)
	{
		$this->_is_default = $value;
		return true;
	}
	/**
	* @access public
	* @return int $subject_id
	*/
	function GetSubjectId()
	{
		return $this->_subject_id;
	}
	/**
	* @access public
	* @param int $value
	* @return bool
	*/
	function SetSubjectId($value)
	{
		$this->_subject_id = value;
		return true;
	}
	/**
	* @access public
	*/
	function Template($channel_db, $row = null)
	{
		if(empty($row))
		{
			$this->SetChannelId(0);
			$this->SetName("");
			$this->SetPath("");
			$this->SetContent("");
			$this->SetSort(0);
			$this->SetIsDefault(false);
		}
		else 
		{
			$this->_row = $row;
			$this->_id = $this->_row['id'];
			$this->SetChannelId($this->_row['channel_id']);
			$this->SetName($this->_row['name']);
			$this->SetPath($this->_row['path']);
			$this->SetContent($this->_row['content']);
			$this->SetSort($this->_row['sort']);
			if($this->_row['is_default'] == 'Y')
			{
				$this->SetIsDefault(true);
			}
			else 
			{
				$this->SetIsDefault(false);
			}
		}
		$this->_db = $channel_db;
		$this->_dao = DAO::CreateInstance();
        $this->_dao->SetCurrentSchema($this->_db);
	}
	/**
	* @access public
	* @return bool
	*/
	function Get()
	{
		if($this->_id>0)
		{
			return $this->GetByID($this->_id);
		}
		else 
		{
			return false;
		}
	}
	/**
	* @access public
	* @param int $id
	* @return bool
	*/
	function GetByID($id)
	{
		$this->_id = intval($id);
		$get_clause = "select * from template where id=$this->_id";
		$this->_row=$this->_dao->GetRow($get_clause);
		if(!$this->_row)
			return false;
		$this->SetChannelId($this->_row['channel_id']);
		$this->SetName($this->_row['name']);
		$this->SetPath($this->_row['path']);
		
		//从文件中读出模板
		if((!empty($this->_path)) && file_exists($this->_path))
		{
			$this->_content = file_get_contents($this->_path);
			return true;
		}
		else 
		{
			return false;
		}
	}
	/**
	* @access public
	* @return bool
	*/
	function Update()
	{
		$update_clause = "update template set 
		channel_id = $this->_channel_id,
		name = $this->_name, 
		path = $this->_path 
		where id=$this->_id
		";
		if(!$this->_dao->Update($update_clause))
		{
			return false;
		}
		//将正文更新至文件系统
		if(!empty($this->_path))
		{
			$fp = fopen($this->_path, 'w');
			if(!fwrite($fp, $this->_content))
			{
				return false;
			}
			fclose($fp);
			return true;
		}
		else 
		{
			return false;
		}
	}
	/**
	* @access public
	* @return bool
	*/
	function Delete()
	{
		if($this->_id>0)
		{
			return $this->DeleteByID($this->_id);
		}
		else 
		{
			return false;
		}
	}
	/**
	* @access public
	* @param int $id
	* @return bool 
	*/
	function DeleteByID($id)
	{
		$id = intval($id);
		$delete_clause = "delete from template where id= $id";
		return $this->_dao->Query($delete_clause);
		
		//删除正文文件
		if((!empty($this->_path)) && file_exists($this->_path))
		{
			unlink($this->_path);
		}
		return true;
	}
	/**
	* @access public
	* @return int
	*/
	function Insert()
	{
		$insert_clause = "insert into template set 
		channel_id = $this->_channel_id,
		name = $this->_name,
		path = $this->_path
		";
		if($this->_dao->Insert($insert_clause))
		{
			$this->_id = $this->_dao->LastID();
		}
		else 
		{
			return -1;
		}
		//将正文写入文件系统
		if(!createPath())
		{
			return -1;
		}
		//更新$_content_path
		if(!$this->Update())
		{
			return -1;
		}
		return $this->_id;
	}
	
	/**
	* @access private
	* @return bool
	*/
	function createPath()
	{
		if($this->_id)
		{
			$dir = PATH_MODULE . "/web/template";
			if(!is_dir($dir))
			{
				mkdir($dir, 0700);
			}
			$dir .= "/" . $this->_db;
			if(!is_dir($dir))
			{
				mkdir($dir, 0700);
			}
			$this->_path = $dir . "/" . $this->_id . ".html";
		
			return true;
		}
		return false;
	}
	/**
	* @access public
	*/
	function InitAsDefaultArticleTemplate()
	{
		//文章sort = 1
		//首页sort = 2
		//一级栏目首页sort = 3
		//二级栏目首页sort = 4
		$sql = "select id from template where sort=1 and is_default='Y'";
		$r = $this->_dao->Query($sql);
		$this->GetByID($r['id']);
	}
}
?>