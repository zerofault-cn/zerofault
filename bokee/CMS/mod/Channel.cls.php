<?php
/**
 * Channel.cls.php
 * Generated by BaseClassGen
 * @copyright bokee dot com
 * created at August 12, 2005, 13:22:37
 */

include_once('sql/DAO.cls.php');
include_once('lang/Assert.cls.php');

class Channel
{
	

	//Properties
	/**
	* @access private
	*/
	var $_id;
	/**
	* @access private
	*/
	var $_name;
	/**
	* @access private
	*/
	var $_dir_name;
	var $_feed_redirect;
	/**
	* @access private
	*/
	var $_dao;
	/**
	* @access private
	*/
	var $_row;


	//Methods
	/**
	* @access public
	*/
	function GetId()
	{
		return $this->_id;
	}
	/**
	* @access public
	*/
	function SetId($value)
	{
		$this->_id = $value;
	}
	/**
	* @access public
	*/
	function GetName()
	{
		return $this->_name;
	}
	/**
	* @access public
	*/
	function SetName($value)
	{
		$this->_name = $value;
	}
	/**
	* @access public
	*/
	function GetDirName()
	{
		return $this->_dir_name;
	}
	/**
	* @access public
	*/
	function SetDirName($value)
	{
		$this->_dir_name = $value;
	}
	function GetFeedRedirect()
	{
		return $this->_feed_redirect;
	}
	function SetFeedRedirect($value)
	{
		$this->_feed_redirect=$value;
	}
	/**
	* @access public
	*/
	function Channel($row = null)
	{
		if(empty($row))
		{
			$this->SetName("");
			$this->SetDirName("");
		}
		else 
		{
			$this->_row = $row;
			
			$this->_id = $row["id"];
			$this->SetName($this->_row['name']);
			$this->SetDirName($this->_row['dir_name']);
		}
		$this->_dao = DAO::CreateInstance();
	}
	/**
	* @access public
	* @return bool
	*/
	function Get()
	{
		if($this->_id>0)
		{
			return $this->GetByID($this->_id);
		}
		else 
		{
			return false;
		}
	}
	
	/**
	* @access public
	* @param int $id
	* @return bool
	*/
	function GetByID($id)
	{
		$this->_id = intval($id);
		$get_clause = "select * from channel where id=$this->_id";
		$this->_row=$this->_dao->GetRow($get_clause);
		if(!$this->_row)
			return false;
		$this->SetName($this->_row['name']);
		$this->SetDirName($this->_row['dir_name']);
		$this->SetFeedRedirect($this->_row['feed_redirect']);
		return true;
	}
	
	/**
	* @access public
	* @param string $name
	* @return bool
	*/
	function GetByDirName($dir_name)
	{
		$this->_dir_name = $dir_name;
		$get_clause = "select * from channel where dir_name='" . $this->_dir_name . "'";
		$this->_row=$this->_dao->GetRow($get_clause);
		if(!$this->_row)
		{
			Log::Append("文件:" . __FILE__ . " 第 " . __LINE__ . " 行附近 根据数据库名获取ID 出错。 sql: $get_clause");
			return false;
		}
		$this->SetId($this->_row['id']);
		$this->SetName($this->_row['name']);
		$this->SetFeedRedirect($this->_row['feed_redirect']);
		return true;
	}
	
	/**
	* @access public
	* @return bool
	*/
	function Update()
	{
		$update_clause = "update channel set 
		name = $this->_name,
		dir_name = $this->_dir_name
		where id=$this->_id
		";
		return $this->_dao->Update($update_clause);
	}
	/**
	* @access public
	* @return bool
	*/
	function Delete()
	{
		if($this->_id>0)
		{
			return $this->DeleteByID($this->_id);
		}
		else 
		{
			return false;
		}
	}
	/**
	* @access public
	* @param int $id
	* @return bool
	*/
	function DeleteByID($id)
	{
		$id = intval($id);
		$this->GetByID($id);
		
		$delete_clause = "delete from channel where id= $id";
		if(!$this->_dao->Query($delete_clause))
		{
			return false;
		}
		$drop_db_clause = "drop database cms_" . $this->_dir_name;
		if(!$this->_dao->Query($drop_db_clause))
		{
			return false;
		}
		return true;
	}
	/**
	* @access public
	* @return int
	*/
	function Insert()
	{
		$insert_clause = "insert into channel set 
		name = '$this->_name',
		dir_name = '$this->_dir_name'
		";

		if($this->_dao->Insert($insert_clause))
		{
			$this->_id = $this->_dao->LastID();
		}
		else 
		{
			return -1;
		}
		
		$sql = "create database cms_" . $this->_dir_name ;
		if(!$this->_dao->Query($sql))
		{
			return -1;
		}
		$this->_dao->SetCurrentSchema("cms_" . $this->_dir_name);
		require_once(PATH_MODULE . "/CMS_CREATE_CHANNEL_DB_TABLES_SCRIPT.php");
		$sql_num = count($sql);
		for($i=0;$i<$sql_num;$i++)
		{
			if(!$this->_dao->Query($sql[$i]))
			{
				return -1;
			}
		}
		return $this->_id;
		
	}

}
?>